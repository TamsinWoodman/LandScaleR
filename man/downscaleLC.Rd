% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/landCoverDownscalingAlgorithm.R
\name{downscaleLC}
\alias{downscaleLC}
\title{Downscale land use and land cover projections}
\usage{
downscaleLC(
  ref_map_file_name,
  LC_deltas_file_list,
  LC_deltas_classes,
  ref_map_type = "areas",
  cell_size_unit = "m",
  match_LC_classes,
  kernel_radius,
  simulation_type = "deterministic",
  fuzzy_multiplier = 1,
  discrete_output_map = FALSE,
  random_seed = as.numeric(Sys.time()),
  output_file_prefix,
  output_dir_path
)
}
\arguments{
\item{ref_map_file_name}{Character, file path to the fine resolution
reference map. The reference map must be at the resolution to which you
want to downscale the input LULC change maps. File format of the reference
map must be one that can be read by the \code{\link[terra:rast]{terra::rast()}} function from the
'terra' R package. It is recommended to use the GeoTIFF file format because
\code{\link[=downscaleLC]{downscaleLC()}} outputs downscaled LULC maps as GeoTIFF files.}

\item{LC_deltas_file_list}{List, gives the file paths of a time series of
LULC change maps. Each file should contain one timestep of LULC change, and
the list must be in the order of maps in the time series. There must be one
layer per LULC class in every file. An additional layer specifying the
total land area per coarse resolution cell can optionally be included in
every LULC change map; this layer must be named "cell_area". Each LULC
change map must be in a file format that can be read by the \code{\link[terra:rast]{terra::rast()}}
function, although the GeoTIFF format is recommended.}

\item{LC_deltas_classes}{Character vector of LULC classes that occur in the
LULC change maps.}

\item{ref_map_type}{Character, one of "areas" or "discrete". If the reference
map contains one LULC class per cell use "areas". If the reference map has
one layer per LULC class containing the area of each LULC class per cell
use "discrete".}

\item{cell_size_unit}{Character, unit for calculating grid cell areas. Must
be one of "km", "m", or "ha". Cell areas are calculated using the
\code{\link[terra:cellSize]{terra::cellSize()}} function.}

\item{match_LC_classes}{Matrix, specifies the proportion of each LULC class
from the LULC change maps that corresponds to every reference map LULC
class. Columns contain reference map LULC classes and rows LULC change map
classes. See details for more information.}

\item{kernel_radius}{Numeric, radius of cells to include in the kernel
density calculation. Defaults to 1, which means all first neighbour cells
will be used to calculate kernel density (eight cells in total).}

\item{simulation_type}{Character, the method of LULC allocation to be used in
LandScaleR. One of "deterministic", "fuzzy", or "null_model". See details
for more information.}

\item{fuzzy_multiplier}{Numeric, the \eqn{f} parameter for the "fuzzy" method
of LULC allocation. See details for more information.}

\item{discrete_output_map}{Logical, output a discrete downscaled LULC map as
well as an area-based LULC map if \code{discrete_output_map = TRUE}.}

\item{random_seed}{Numeric, random seed for the simulation.}

\item{output_file_prefix}{Character, prefix for the output downscaled LULC
map files.}

\item{output_dir_path}{Character, path to the directory in which to saved the
downscaled LULC map files. The directory will be created by \code{\link[=downscaleLC]{downscaleLC()}}
if it does not already exist.}
}
\value{
GeoTIFF files containing downscaled land-use maps. If
\code{discrete_output_map = TRUE} two output files will be generated per
timestep: one with the area of each LULC class per cell and one with the
largest LULC class per cell.
}
\description{
Implements the 'LandScaleR' downscaling algorithm, which converts coarse
resolution land use and land cover (LULC) change maps to a finer resolution
by applying LULC change from a time series of maps to a fine resolution
reference map.
}
\details{
\subsection{Input maps}{

The fine resolution reference map must be at the resolution to which the
LULC change maps are to be downscaled. The reference and LULC maps must be
in the same geographic projection but they do not have to cover exactly the
same extent. The reference map can either contain one LULC class per cell
(\verb{ref_map_type = "discrete}) or the area of each LULC class per cell
(\code{ref_map_type = "areas"}). Note that if \code{ref_map_type = discrete} is
specified then the LULC classes in the reference map will be prepended with
"LC" to ensure that they are treated as characters by LandScaleR. The LULC
change maps and reference map do not have to contain the same LULC classes,
as these can be matched using the \code{match_LC_classes} argument.
}

\subsection{Grid cell areas}{

The total terrestrial area of every coarse and fine resolution grid cell is
required in LandScaleR to ensure that the areas of coarse and fine
resolution grid cells match. The algorithm uses the \code{\link[terra:cellSize]{terra::cellSize()}}
function to calculate grid cell areas in the reference map and LULC change
maps. Alternatively, for the LULC change maps an extra layer called
"cell_area" can be added to each file giving the area of every coarse
resolution grid cell. This can be useful in situations where only a small
area of a coarse resolution grid cell is covered by land, and the rest is
water or ocean that is not to be included in the downscaling process.
}

\subsection{Matching LULC classes}{

The \code{match_LC_classes} argument allows for cases where the input LULC
change maps and reference map do not contain the same LULC classes. Columns
of the matrix must contain the reference map LULC classes and rows the LULC
change map classes. Values specify the proportion of each LULC change map
class that should be matched to each reference map LULC class. For example:\tabular{lllllll}{
    \tab Primary vegetation \tab Secondary vegetation \tab Forest plantation \tab Cropland \tab Pasture \tab Urban \cr
   Managed forest \tab 0 \tab 0 \tab 1 \tab 0 \tab 0 \tab 0 \cr
   Unmanaged forest \tab 0.5 \tab 0.5 \tab 0 \tab 0 \tab 0 \tab 0 \cr
   Other natural \tab 0.5 \tab 0.5 \tab 0 \tab 0 \tab 0 \tab 0 \cr
   Cropland \tab 0 \tab 0 \tab 0 \tab 1 \tab 0 \tab 0 \cr
   Pasture \tab 0 \tab 0 \tab 0 \tab 0 \tab 1 \tab 0 \cr
   Urban \tab 0 \tab 0 \tab 0 \tab 0 \tab 0 \tab 1 \cr
}


In this case, if unmanaged forest were to increase by 100
\ifelse{html}{\out{km<sup>2</sup>}}{\eqn{km^2}} in an LULC change map, 50
\ifelse{html}{\out{km<sup>2</sup>}}{\eqn{km^2}} of the increase would be
allocated to the reference map as primary vegetation and a further 50
\ifelse{html}{\out{km<sup>2</sup>}}{\eqn{km^2}} would be allocated as
secondary vegetation.
}

\subsection{Kernel density}{

Kernel densities are calculated by LandScaleR for every reference map grid
cell and LULC class. A kernel density gives the distance-weighted sum of
the area of each LULC class surrounding a focal cell
\insertCite{LePage2016}{LandScaleR}. Kernel densities are used later in
LandScaleR to decide where to place LULC change on the reference map.
}

\subsection{LULC allocation methods}{

Three methods are provided in LandScaleR to allocate LULC change to the
reference map, which vary the order in which reference map grid cells are
selected to receive new LULC. The three methods are:
\itemize{
\item Quasi-deterministic ("deterministic")
\item Fuzzy ("fuzzy")
\item Random ("null_model")
}

In the quasi-deterministic method, grid cells are allocated new LULC in
order from the cell with the highest kernel density for the increasing LULC
class to the cell with the lowest. Any cells with a kernel density equal to
zero are allocated new LULC randomly after LandScaleR has attempted to
allocate new LULC in all cells with a kernel density greater than zero.

Similarly, in the fuzzy method of LULC allocation new areas of LULC are
allocated in order from the cell with the highest to the one with the
lowest kernel density. However, in the fuzzy method kernel densities are
adjusted to alter the likelihood of each grid cell receiving new LULC. For
a single reference map grid cell, the kernel density is adjusted by summing
the kernel density and an adjustment drawn from the Normal distribution
with mean of zero. The standard deviation for the Normal distribution is
the standard deviation of kernel densities for all cells eligible to
receive the increasing LULC class, multiplied by the user-specified \eqn{f}
parameter (\code{fuzzy_multiplier}). The higher the \eqn{f} parameter, the more
the order in which grid cells are allocated new LULC is shuffled. Increased
shuffling of the order of grid cells leads to more random patterns of LULC
in the output downscaled maps.

In the random method of LULC allocation new areas of LULC are randomly
placed in eligible grid cells on the reference map.
}
}
\references{
\insertRef{LePage2016}{LandScaleR}
}
